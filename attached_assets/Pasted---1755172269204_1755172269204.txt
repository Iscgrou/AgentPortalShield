نقش تو: معمار سامانه و مستندساز ارشد. باید بر مبنای توصیف من، بدون نیاز به انتقال کد، یک سند فنی/اجرایی کامل تولید کنی تا تیم دیگری بتواند “همان” اپلیکیشن را با دستیار هوش مصنوعی جدید بازتولید کند.

بافت مسئله (Facts):
- اپلیکیشن یک وب‌سایت جامع با یک صفحه ورود مشترک است که دو پنل را به هم متصل می‌کند: «پنل مدیریت» و «پنل CRM مبتنی بر هوش مصنوعی».
- پنل مدیریت: حسابداری مالی، مدیریت بدهی، صدور فاکتور برای «نماینده‌ها (مشتری‌ها)»، و تولید پرتال عمومی برای مشاهده فاکتور نماینده‌ها.
- پنل CRM مبتنی بر هوش مصنوعی: برای تیم پشتیبان جهت بهبود رابطه و افزایش فروش به نماینده‌ها.

ماموریت تو: یک بسته مستندات مهندسی معکوس تولید کن که شامل بخش‌های زیر باشد. خروجی تو باید کاملاً خودبسنده، دقیق، قابل اجرا و همراه با مثال‌های واقعی باشد.

1) نمای کلی و فلسفه
- شرح مأموریت، ارزش پیشنهادی و شاخص‌های موفقیت.
- الگوهای معماری منتخب و دلیل انتخاب (مثلاً لایه‌ای، service-oriented، ماژولار، event-driven).
- مرزهای دامنه (Bounded Contexts) و اینکه چرا این مرزبندی انتخاب شده.

2) مدل C4 و دیاگرام‌ها
- سطح System: مؤلفه‌های بیرونی، کاربران و جریان‌های اصلی.
- سطح Container: وب‌اپ، سرویس‌های بک‌اند، پایگاه‌داده، صف/کش، سرویس‌های هویتی، فایل‌استوریج.
- سطح Component: اجزای داخلی هر کانتینر.
- همه دیاگرام‌ها را با Mermaid ارائه کن (system/context, container, component, sequence, state/ERD).
- برای هر فلش، پروتکل، جهت جریان داده و حساسیت امنیتی را بنویس.

3) دامنه‌ها، موجودیت‌ها و مدل داده (ERD)
- موجودیت‌ها با فیلدها، انواع داده، محدودیت‌ها و ایندکس‌ها.
- روابط (۱:N، N:M)، کلیدهای خارجی و قوانین حذف/به‌روزرسانی.
- نمونه رکورد JSON برای هر موجودیت (مثال واقعی، نه ساختگی مبهم).
- استراتژی چندسازمانی/چندمشتری (multitenancy) اگر هست: تفکیک داده منطقی/فیزیکی.

4) گردش‌های کاری کلیدی (Workflows)
- صدور فاکتور نماینده، مدیریت بدهی، تسویه، ارسال اعلان، مشاهده در پرتال عمومی.
- قیف فروش و فعالیت‌های CRM: ایجاد لید، پرورش، تبدیل به فرصت، بستن فروش.
- برای هر جریان: دیاگرام Sequence (Mermaid)، ورودی/خروجی‌ها، نقش‌ها، پیش‌شرط/پس‌شرط، SLA.

5) قراردادهای API و یکپارچه‌سازی
- فهرست سرویس‌ها و Endpointها (REST/GraphQL/RPC): مسیر، متد، اسکیماهای Request/Response، کدهای خطا، Idempotency، Versioning.
- Webhookها/رویدادها: نام رویداد، Payload، تضمین تحویل (at-least-once/…)، Retry/Backoff.
- اتصالات بیرونی (پرداخت، ایمیل/SMS، هویت): نقطه اتصال، حساسیت، زمان‌بندی و محدودیت نرخ.

6) منطق‌های عملیاتی و قوانین کسب‌وکار
- قوانین قیمت‌گذاری، محاسبه بدهی، تولید شماره فاکتور، وضعیت‌های فاکتور و انتقال‌ها.
- قواعد CRM: امتیازدهی لید، معیارهای واجد شرایط شدن، SLA پاسخ‌گویی، اولویت‌بندی وظایف.
- استثناها، تعارض قوانین، تقدم/تاخر و مثال‌های مرزی.

7) کوپلینگ‌ها و وابستگی‌ها
- نوع کوپلینگ بین اجزا (داده‌ای، زمانی، ساختاری، قراردادی) و درجه آن.
- نقاط شکنندگی و طرح‌های کاهش کوپلینگ (رویدادمحور، Anti-Corruption Layer، Adapter).
- ماتریس وابستگی: چه چیزی به چه چیزی و چرا.

8) امنیت، هویت و مجوزدهی
- مدل کاربر/نقش/مجوز (RBAC/ABAC)، سطوح دسترسی برای: ادمین مالی، پشتیبان CRM، نماینده، خواننده پرتال عمومی.
- جریان احراز هویت (SSO، توکن‌ها، انقضا، تجدید)، سیاست‌های نشست، محافظت CSRF/CORS.
- ممیزی و لاگ رویدادهای حساس (مشاهده، تغییر، پرداخت).

9) لایه AI/LLM (برای پنل CRM)
- نقش‌های عامل‌ها (Agents)، زنجیره‌ها (Chains) و ابزارها (Tools) و اینکه هرکدام چه کاری می‌کنند.
- طراحی پرامپت‌ها: الگوها، قیود، متادیتا، نمونه ورودی/خروجی؛ مدیریت نسخه پرامپت.
- حافظه مکالمه و دانش: بردار‌دیتابیس، RAG (منابع، Chunking، کَش)، سیاست‌های تازه‌سازی.
- مهار ریسک: سقف‌های درخواست، توکن، قرنطینه پاسخ‌های مبهم، بازپرس‌وجو (Self-critique/Guardrails).
- معیارهای کیفیت: دقت توصیه، زمان پاسخ، نرخ تعامل.

10) تجربه کاربری اطلاعاتی (UX محتوایی)
- نقشه صفحات: صفحه ورود مشترک، داشبورد مدیریت، صدور/مشاهده فاکتور، پرتال عمومی، داشبورد CRM، جزئیات نماینده، گردش‌های پیگیری.
- فرم‌ها/جدول‌ها: فیلدها، اعتبارسنجی، خطاهای کاربرپسند، Empty States.
- دسترس‌پذیری، i18n، فرمت‌های تاریخ/واحد پول.

11) عملکرد، مقیاس‌پذیری و قابلیت اتکا
- الگوهای کش (کلیدها، TTL)، صف/کارهای پس‌زمینه، محدودسازی نرخ، Throttling.
- بودجه تأخیر (Latency Budget) برای مسیرهای حساس (صدور فاکتور، پاسخ CRM).
- استراتژی‌های Failover/Degrade، سیاست ریترای، Idempotency Keys.
- اندازه‌گیری: متریک‌ها، لاگ ساخت‌یافته، Traceها، داشبوردها و آلارم‌ها.

12) استقرار، محیط‌ها و CI/CD
- محیط‌ها (Dev/Staging/Prod)، متغیرهای پیکربندی و اسرار.
- توپولوژی استقرار، نسخه‌گذاری، مهاجرت داده (Migration Plan، Seedها، Rollback).
- تست‌ها: واحدی، یکپارچه، Contract، بار/تنش، سناریوهای End-to-End نماینده/پشتیبان/ادمین.

13) ریسک‌ها، فرضیات، قیود و موارد خارج از دامنه
- ریسک‌های فنی/عملیاتی و طرح کاهش آن‌ها.
- فرضیات صریح (مثلاً یک‌ارزی/چند‌ارزی، مالیات، حوزه جغرافیایی).
- موارد Out-of-Scope برای جلوگیری از سوءبرداشت.

خروجی‌نویسی و کیفیت:
- هر بخش باید همراه با مثال واقعی، شناسه‌ها، نام‌گذاری صریح و جدول/دیاگرام باشد. از عبارات عمومی پرهیز کن.
- برای هر تصمیم، «چرایی» را بنویس (Trade-off).
- همه دیاگرام‌ها و توالی‌ها را با Mermaid ارائه کن.
- از جداول برای خلاصه‌ها استفاده کن. در کنار هر جدول، یک مثال JSON کوتاه بیاور.
- اگر داده‌ای از من کم است، آن را در انتهای سند، زیر عنوان «پرسش‌های تکمیلی» به‌صورت بولت‌پوینت‌های دقیق مطالبه کن و بگو پر کردن آن‌ها خروجی را کامل‌تر می‌کند.

ورودی من (برای شروع؛ هرچه لازم داری مطالبه کن):
- شرح دامنه‌ها، نام ماژول‌ها و نقش‌ها: [پر کن]
- موجودیت‌های کلیدی و فیلدها: [پر کن]
- گردش‌های کاری مهم: [پر کن]
- یکپارچه‌سازی‌های بیرونی: [پر کن]
- سیاست‌های امنیتی/مجوزها: [پر کن]
- نیازهای غیرعملکردی (SLO/مقیاس/قوانین): [پر کن]
- نکاتی که «نباید» تغییر کنند در نسخه جدید: [پر کن]

حالا سند را تولید کن. ساختار را دقیقاً طبق 1 تا 13 رعایت کن. اگر چیزی را نمی‌دانی، آن را با Placeholder برچسب‌دار بگذار و در «پرسش‌های تکمیلی» مطالبه کن.
