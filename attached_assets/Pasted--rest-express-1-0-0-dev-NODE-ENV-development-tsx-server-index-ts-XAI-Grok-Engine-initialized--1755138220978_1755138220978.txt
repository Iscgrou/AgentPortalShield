
> rest-express@1.0.0 dev
> NODE_ENV=development tsx server/index.ts

✅ XAI Grok Engine initialized successfully
2:20:27 AM [express] Checking database connection...
2:20:27 AM [database] Database connection successful
Query: select "id", "username", "password_hash", "role", "permissions", "is_active", "last_login_at", "created_at" from "admin_users" where "admin_users"."username" = $1 -- params: ["mgr"]
Query: select "id", "username", "password_hash", "full_name", "email", "role", "permissions", "is_active", "last_login_at", "created_at", "updated_at" from "crm_users" where "crm_users"."username" = $1 -- params: ["crm"]
✅ XAI Grok Engine initialized successfully
✅ Settings routes registered successfully
✅ Standardized Invoice Routes Registered
✅ Maintenance routes registered successfully
2:20:28 AM [express] serving on port 5000
2:20:28 AM [express] Environment: development
2:20:28 AM [express] Health check available at /health
Browserslist: browsers data (caniuse-lite) is 10 months old. Please run:
  npx update-browserslist-db@latest
  Why you should do it regularly: https://github.com/browserslist/update-db#readme
✅ GET /api/auth/check 200 in 0ms
2:20:39 AM [express] GET /api/auth/check 200 in 25ms :: {"authenticated":true,"user":{"id":4,"userna…
✅ GET /api/settings/telegram_bot_token 401 in 0ms
2:20:39 AM [express] GET /api/settings/telegram_bot_token 401 in 24ms :: {"error":"احراز هویت نشده"}
🔄 SHERLOCK v18.0: Starting global statistics generation...
🚀 SHERLOCK v18.0: Generating fresh global statistics...
🔥 SHERLOCK v18.5: Calculating fresh system health...
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where "payments"."is_allocated" = $1 -- params: [true]
Query: select 
          COALESCE(SUM(
            GREATEST(0, 
              COALESCE(inv_total.amount, 0) - COALESCE(pay_total.amount, 0)
            )
          ), 0)
         from (
        SELECT 
          r.id,
          COALESCE(SUM(CASE WHEN i.status IN ('unpaid', 'overdue') THEN CAST(i.amount as DECIMAL) ELSE 0 END), 0) as amount
        FROM representatives r
        LEFT JOIN invoices i ON r.id = i.representative_id
        GROUP BY r.id
      ) inv_total left join (
        SELECT 
          representative_id,
          COALESCE(SUM(CAST(amount as DECIMAL)), 0) as amount
        FROM payments 
        WHERE is_allocated = true
        GROUP BY representative_id
      ) pay_total on inv_total.id = pay_total.representative_id
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where "payments"."is_allocated" = $1 -- params: [false]
Query: select count(*), SUM(CASE WHEN is_active = true THEN 1 ELSE 0 END), SUM(CASE WHEN is_active = false THEN 1 ELSE 0 END) from "representatives"
Query: select COALESCE(SUM(CAST(total_sales as DECIMAL)), 0), COALESCE(SUM(CAST(total_debt as DECIMAL)), 0), SUM(CASE WHEN CAST(total_debt as DECIMAL) > 100000 THEN 1 ELSE 0 END) from "representatives"
Query: select count(*), SUM(CASE WHEN status = 'paid' THEN 1 ELSE 0 END), SUM(CASE WHEN status = 'unpaid' THEN 1 ELSE 0 END), SUM(CASE WHEN status = 'overdue' THEN 1 ELSE 0 END), SUM(CASE WHEN sent_to_telegram = false THEN 1 ELSE 0 END) from "invoices"
Query: select count(*), SUM(CASE WHEN is_active = true THEN 1 ELSE 0 END) from "sales_partners"
Query: select COUNT(*) from "representatives" where CAST(total_debt as DECIMAL) > 100000
Query: select "id", "type", "description", "related_id", "metadata", "created_at" from "activity_logs" where "activity_logs"."created_at" >= $1 order by "activity_logs"."created_at" desc limit $2 -- params: ["2025-08-07T02:20:39.960Z", 5]
Query: select COUNT(*) from "representatives" where "representatives"."is_active" = $1 -- params: [true]
Query: select "id" from "representatives" where "representatives"."is_active" = $1 order by RANDOM() limit $2 -- params: [true, 5]
Query: select "total_debt", "total_sales" from "representatives" where "representatives"."id" = $1 -- params: [1949]
Query: select "total_debt", "total_sales" from "representatives" where "representatives"."id" = $1 -- params: [1969]
Query: select "total_debt", "total_sales" from "representatives" where "representatives"."id" = $1 -- params: [2003]
Query: select "total_debt", "total_sales" from "representatives" where "representatives"."id" = $1 -- params: [1794]
Query: select "total_debt", "total_sales" from "representatives" where "representatives"."id" = $1 -- params: [1930]
Representative Overview Debug: {
  countStats: { totalCount: 245, activeCount: '245', inactiveCount: '0' },
  financialStats: {
    totalSales: '324731290.00',
    totalDebt: '175033390.00',
    riskCount: '138'
  }
}
✅ SHERLOCK v18.5: System health calculated (5 samples)
⏱️ Calculations completed in 171ms
✅ SHERLOCK v18.0: Global statistics generated in 172ms
✅ GET /global 200 in 172ms
2:20:40 AM [express] GET /api/unified-statistics/global 200 in 194ms :: {"success":true,"data":{"tot…
🚀 SHERLOCK v18.7: Fresh calculation for 30 debtors
🚀 SHERLOCK v18.7: Ultra-optimized debtor calculation for 30 records
Query: select "id", "name", "code", "total_debt" from "representatives" where CAST(total_debt as DECIMAL) > 50000 order by CAST(total_debt as DECIMAL) desc limit $1 -- params: [45]
⚡ Pre-filtered to 45 candidates in 22ms
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [2009]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1913]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1873]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1845]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1828]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1942]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1888]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1927]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1947]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1855]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1896]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1792]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1854]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1863]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1973]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1879]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1898]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1931]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1847]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1930]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [2009]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1873]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1913]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1845]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1828]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1942]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1888]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1927]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1947]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1855]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1896]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1792]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1854]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1863]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1973]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1879]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1898]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1931]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1847]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1930]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [2009]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1873]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1913]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1845]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1828]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1942]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1888]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1927]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1947]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1855]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1896]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1792]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1854]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1863]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1973]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1879]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1931]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1898]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1847]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1930]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [2009]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1873]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1913]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1845]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1942]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1828]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1927]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1888]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1947]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1855]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1896]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1792]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1854]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1863]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1973]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1879]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1931]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1898]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1847]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1930]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3750, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3320, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3360, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3292, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3389, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3275, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3669, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3335, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3394, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3302, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3343, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3239, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3301, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3420, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3665, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3326, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3378, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3294, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3345, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3377, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3516, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3765, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3568, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3738, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3822, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3722, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3374, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3547, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3603, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3748, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3747, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3783, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3684, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3634, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3310, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3771, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3585, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3740, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3556, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3584, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3531, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3797, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3505, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3598, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3491, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3777, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3809, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3828, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3514, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3513, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3554, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3447, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3853, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3756, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3537, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3813, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3507, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3785, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3812, true]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1826]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1887]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1799]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1961]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1903]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1981]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1849]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1969]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1821]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1956]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1916]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1954]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1900]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1802]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1829]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1962]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1798]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1877]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1988]
Query: select "id", "name", "code" from "representatives" where "representatives"."id" = $1 -- params: [1938]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1961]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1887]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1799]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1826]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1903]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1981]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1969]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1849]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1821]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1956]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1916]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1954]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1900]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1802]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1829]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1962]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1798]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1877]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1988]
Query: select COUNT(*), COALESCE(SUM(CAST(amount as DECIMAL)), 0), COALESCE(SUM(CASE WHEN status = 'paid' THEN CAST(amount as DECIMAL) ELSE 0 END), 0), COALESCE(SUM(CASE WHEN status IN ('unpaid', 'overdue', 'partial') THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(created_at) from "invoices" where "invoices"."representative_id" = $1 -- params: [1938]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1961]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1887]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1799]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1826]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1903]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1981]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1969]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1849]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1821]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1956]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1916]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1954]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1900]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1802]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1829]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1962]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1798]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1877]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1988]
Query: select COUNT(*), COALESCE(SUM(CASE WHEN is_allocated = true THEN CAST(amount as DECIMAL) ELSE 0 END), 0), MAX(payment_date) from "payments" where "payments"."representative_id" = $1 -- params: [1938]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1961]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1887]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1799]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1826]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1981]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1903]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1969]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1849]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1821]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1956]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1916]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1954]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1900]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1802]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1829]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1962]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1798]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1877]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1988]
Query: select "id", "amount", "status" from "invoices" where "invoices"."representative_id" = $1 -- params: [1938]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3408, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3334, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3428, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3455, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3273, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3350, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3416, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3296, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3713, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3403, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3363, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3401, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3347, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3459, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3276, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3409, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3324, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3454, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3385, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3435, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3621, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3776, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3641, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3720, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3692, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3560, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3631, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3742, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3268, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3613, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3612, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3571, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3558, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3696, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3723, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3622, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3769, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3691, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3593, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3864, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3843, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3546, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3860, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3489, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3246, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3789, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3851, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3509, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3480, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3836, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3835, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3787, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3799, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3249, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3492, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3844, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3535, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3818, true]
Query: select COALESCE(SUM(CAST(amount as DECIMAL)), 0) from "payments" where ("payments"."invoice_id" = $1 and "payments"."is_allocated" = $2) -- params: [3245, true]
✅ SHERLOCK v18.7: Ultra-optimized generated 30 debtors in 1247ms
✅ SHERLOCK v18.7: Generated 30 debtors in 1248ms
🔴 CRITICAL GET /debtors?limit=30 200 in 1248ms
2:20:42 AM [express] GET /api/unified-financial/debtors 200 in 1271ms :: {"success":true,"data":[{"i…
Memory usage: { rss: 248.48, heapTotal: 112.55, heapUsed: 107.33, external: 10.19 }
Memory usage: { rss: 248.98, heapTotal: 112.55, heapUsed: 107.55, external: 10.25 }
2:23:25 AM [vite] hmr update /src/App.tsx?v=2U2sSrN_E5TEigJDA-Tn0, /src/index.css?v=2U2sSrN_E5TEigJDA-Tn0
2:23:25 AM [vite] hmr update /src/pages/representatives.tsx, /src/index.css?v=2U2sSrN_E5TEigJDA-Tn0
2:23:26 AM [vite] hmr update /src/pages/invoices.tsx, /src/index.css?v=2U2sSrN_E5TEigJDA-Tn0
Memory usage: { rss: 248.93, heapTotal: 112.55, heapUsed: 107.48, external: 10.16 }
2:23:29 AM [vite] Internal server error: /home/runner/workspace/client/src/pages/representatives.tsx: Identifier 'React' has already been declared. (74:7)

  72 |
  73 | // SHERLOCK v23.0: Enhanced error handling and routing fix
> 74 | import React, { useState, useEffect } from 'react';
     |        ^
  75 | import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
  76 | import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
  77 | import { Button } from '@/components/ui/button';
  Plugin: vite:react-babel
  File: /home/runner/workspace/client/src/pages/representatives.tsx:74:7
  72 |  
  73 |  // SHERLOCK v23.0: Enhanced error handling and routing fix
  74 |  import React, { useState, useEffect } from 'react';
     |         ^
  75 |  import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';
  76 |  import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
      at toParseError (/home/runner/workspace/node_modules/@babel/parser/src/parse-error.ts:95:45)
      at raise (/home/runner/workspace/node_modules/@babel/parser/src/tokenizer/index.ts:1497:19)
      at checkRedeclarationInScope (/home/runner/workspace/node_modules/@babel/parser/src/util/scope.ts:155:19)
      at declareName (/home/runner/workspace/node_modules/@babel/parser/src/util/scope.ts:109:12)
      at declareName (/home/runner/workspace/node_modules/@babel/parser/src/plugins/typescript/scope.ts:89:11)
      at declareNameFromIdentifier (/home/runner/workspace/node_modules/@babel/parser/src/parser/lval.ts:739:16)
      at checkIdentifier (/home/runner/workspace/node_modules/@babel/parser/src/parser/lval.ts:734:12)
      at checkLVal (/home/runner/workspace/node_modules/@babel/parser/src/parser/lval.ts:636:12)
      at finishImportSpecifier (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:3185:10)
      at parseImportSpecifierLocal (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:3172:31)
      at maybeParseDefaultImportSpecifier (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:3356:12)
      at parseImportSpecifiersAndAfter (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:3120:29)
      at parseImport (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:3105:17)
      at parseImport (/home/runner/workspace/node_modules/@babel/parser/src/plugins/typescript/index.ts:2895:28)
      at parseStatementContent (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:601:25)
      at parseStatementContent (/home/runner/workspace/node_modules/@babel/parser/src/plugins/typescript/index.ts:3056:20)
      at parseStatementLike (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:437:17)
      at parseModuleItem (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:374:17)
      at parseBlockOrModuleBlockBody (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:1419:16)
      at parseBlockBody (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:1393:10)
      at parseProgram (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:225:10)
      at parseTopLevel (/home/runner/workspace/node_modules/@babel/parser/src/parser/statement.ts:203:25)
      at parse (/home/runner/workspace/node_modules/@babel/parser/src/parser/index.ts:90:10)
      at parse (/home/runner/workspace/node_modules/@babel/parser/src/plugins/typescript/index.ts:4192:20)
      at parse (/home/runner/workspace/node_modules/@babel/parser/src/index.ts:92:38)
      at parser (/home/runner/workspace/node_modules/@babel/core/src/parser/index.ts:28:19)
      at parser.next (<anonymous>)
      at normalizeFile (/home/runner/workspace/node_modules/@babel/core/src/transformation/normalize-file.ts:50:24)
      at normalizeFile.next (<anonymous>)
      at run (/home/runner/workspace/node_modules/@babel/core/src/transformation/index.ts:40:36)
      at run.next (<anonymous>)
      at transform (/home/runner/workspace/node_modules/@babel/core/src/transform.ts:29:20)
      at transform.next (<anonymous>)
      at step (/home/runner/workspace/node_modules/gensync/index.js:261:32)
      at /home/runner/workspace/node_modules/gensync/index.js:273:13
      at async.call.result.err.err (/home/runner/workspace/node_modules/gensync/index.js:223:11)
      at /home/runner/workspace/node_modules/gensync/index.js:189:28
      at <anonymous> (/home/runner/workspace/node_modules/@babel/core/src/gensync-utils/async.ts:90:7)
      at /home/runner/workspace/node_modules/gensync/index.js:113:33
      at step (/home/runner/workspace/node_modules/gensync/index.js:287:14)
      at /home/runner/workspace/node_modules/gensync/index.js:273:13
      at async.call.result.err.err (/home/runner/workspace/node_modules/gensync/index.js:223:11)
